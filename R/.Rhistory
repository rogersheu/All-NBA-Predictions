{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x=Player, y=RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
coord_cartesian(ylim=c(0, 1)) +
scale_y_continuous(breaks=seq(0,1,0.1)) +
coord_flip() +
geom_point(aes(x=Player, y=RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x=Player, y=SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x=Player, y=kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x=Player, y=MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x=Player, y=XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x=Player, y=Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "02")
plot_predictions("2021", "12", "03")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x=Player, y=RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
coord_cartesian(ylim = c(0,1)) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "03")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x=Player, y=RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
coord_cartesian(ylim = c(0,1)) +
coord_flip() +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "03")
plot_predictions("2021", "12", "03")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x=Player, y=RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "01")
plot_predictions("2021", "12", "01")
plot_predictions("2021", "12", "02")
plot_predictions("2021", "12", "03")
plot_predictions("2021", "12", "04")
plot_predictions("2021", "12", "05")
plot_predictions("2021", "12", "06")
plot_predictions("2021", "12", "07")
currPlot + coord_cartesian(ylim = c(0,1))
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates) +#, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "07")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "07")
plot_predictions("2021", "12", "08")
plot_predictions("2021", "12", "08")
What if your job description were simply "Accelerating Innovation through Trustworthy Experimentation and Measurment"? That is the essence of roles within our team. Are you a Data Scientist (DS) who has an appreciation for experimentation, trustworthiness of results, insatiable curiosity, and ability to challenge yourself and drive a cultural change towards data driven decision-making in multi-billion-dollar businesses? We are looking for experienced data scientists who know how to solve complex big data problems, work with statistics and algorithms, analyze big data and can help drive large products within Microsoft run trustworthy experiments. You can be involved in building the Microsoft experimentation platform used in a wide range of heavily used products including Azure, Dynamics, Power Platform and more. 
The Microsoft Experimentation Platform (ExP) is a team within Cloud & AI (C&AI). We have been researching, developing, and operating ExP for over 14 years. 
We are building a platform in Azure that accelerates innovations for key partners in Microsoft by testing innovative ideas quickly and reliably. Such as: What factors affect the quality of the Azure user experience? What features drive users to love the product and want to use them more? How can we grow and retain customers through a delightful user experience? The list of needs grows every day. Come and join us in the revolution!   
https://www.microsoft.com/en-us/research/group/experimentation-platform-exp/ 
Responsibilities
Apply your expertise in quantitative analysis, data mining, and the presentation of data to develop experiments and provide algorithmic problem-solving solutions. 
Build data manipulation, processing, and data visualization tools and share these tools and your knowledge across the team, C&AI, and Microsoft. 
Develop novel statistical methods to help teams better measure user engagement with Microsoft products 
Handle large amounts of data using various tools, including your own. We prefer knowledge of Python, Java, C++ or C# as well as Hadoop, Hive, Pig, Spark but are open to all languages. 
Ensure high-quality data and understand how that data which is generated out experimental design can produce actionable, trustworthy conclusions. 
Partner with internal clients such as Azure, Windows, Bing , Teams and Microsoft Office.  
Drive end-to-end projects by utilizing, applying, and analyzing data associated business problems. 
Engage with senior management in making key business decisions and help drive long term experimentation growth across all Microsoft products. 
Mentor others in the team.  
Qualifications
DS2 Required Qualifications:
2+ years‘ experience in applied statistics & mathematics skills: p-values, confidence intervals, regression. 
A minimum of a Bachelors degree in Computer Science, or a related field, or equivalent alternative education, skills, and/or practical IT work experience is required.
Preferred Qualifications
PhD degree preferred 
Requirements
These requirements include, but are not limited to the following specialized security screenings
Ability to meet Microsoft, customer and/or government security screening requirements are required for this role.
Microsoft Cloud Background Check: This position will be required to pass the Microsoft Cloud background check upon hire/transfer and every two years thereafter.
#AIPLATFORM#
#AIPLATREF#
#DTPJobs#
Microsoft is an equal opportunity employer. All qualified applicants will receive consideration for employment without regard to age, ancestry, color, family or medical care leave, gender identity or expression, genetic information, marital status, medical condition, national origin, physical or mental disability, political affiliation, protected veteran status, race, religion, sex (including pregnancy), sexual orientation, or any other characteristic protected by applicable laws, regulations and ordinances. We also consider qualified applicants regardless of criminal histories, consistent with legal requirements. If you need assistance and/or a reasonable accommodation due to a disability during the application or the recruiting process, please send a request via the Accommodation request form.
Benefits/perks listed below may vary depending on the nature of your employment with Microsoft and the country where you work.
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
#geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen", "SVM" = "goldenrod", "kNN" = "red4", "MLP" = "royalblue",
"XGBoost" = "hotpink", "Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "08")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.1) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
#geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen",
"SVM" = "goldenrod",
#"kNN" = "red4",
"MLP" = "royalblue",
"XGBoost" = "hotpink",
"Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "08")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
#geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen",
"SVM" = "goldenrod",
#"kNN" = "red4",
"MLP" = "royalblue",
"XGBoost" = "hotpink",
"Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "08")
plot_predictions <- function(year, month, day) # Enter in yyyy, mm, dd format as STRINGS
{
date <- paste(year, month, day, sep="")
filename <- paste("stats_", date, "_modeled", sep="")
folderName <- paste(year, "-", month, "-", day, "/", sep="")
fullPath <- paste("~/GitHub/All-Star-Predictions/baseData/dailystats/", folderName, filename, ".csv", sep="")
currstats <- read.csv(fullPath)
df <- select(currstats, Player, RF, SVM, kNN, MLP, XGBoost)
df$Avg <- rowMeans(subset(df, select = c(RF, SVM, MLP, XGBoost)), na.rm = TRUE) # Removed kNN because it is consistently lower than the other models.
# Perhaps that's indicating that I need to tune the hyperparameters on the other models?
df$SD <- rowSds(as.matrix(subset(df, select = c(RF, SVM, MLP, XGBoost))), na.rm = TRUE)
topCandidates <- filter(df, Avg > 0.25)
attach(topCandidates)
topCandidates <- topCandidates[order(-Avg),]
detach(topCandidates)
saveFileName = paste("~/GitHub/All-Star-Predictions/R/Graphs/Model Output ", year, month, day, ".png", sep="")
currPlot <- ggplot(topCandidates, aes(x = Player, y = RF)) +
theme_bw() +
theme(axis.text.y = element_text(face = "bold")) +
ylab("Model Probability") +
xlab("") +
scale_x_discrete(limits = rev(c(topCandidates$Player))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
#coord_cartesian(ylim = c(0,1)) +
coord_flip() +
geom_point(aes(x = Player, y = RF, color = "RF"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = SVM, color = "SVM"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
#geom_point(aes(x = Player, y = kNN, color = "kNN"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = MLP, color = "MLP"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_point(aes(x = Player, y = XGBoost, color = "XGBoost"), position = position_jitter(w=.1), size = 3, alpha = 0.5) +
geom_errorbar(aes(ymin = Avg - SD, ymax = Avg + SD, color = "gray"), width = .5, alpha = 0.5) +
geom_point(aes(x = Player, y = Avg, color = "Avg"), size = 3, alpha = 1) +
scale_color_manual(values = c("RF" = "springgreen",
"SVM" = "goldenrod",
#"kNN" = "red4",
"MLP" = "royalblue4",
"XGBoost" = "hotpink",
"Avg" = "gray24"))
ggsave(
filename = paste("Model Output ", year, month, day, ".png", sep=""),
plot = currPlot,
device = "png",
path = "~/GitHub/All-Star-Predictions/R/Graphs/",
# width = 12,
# height = 9.75,
# units = "in"
)
currPlot
}
plot_predictions("2021", "12", "08")
